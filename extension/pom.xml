<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>hamster</artifactId>
        <groupId>com.hframework</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>extension</artifactId>

    <dependencies>
        <dependency>
            <groupId>com.hframework</groupId>
            <artifactId>basic</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.hongframework</groupId>
            <artifactId>hframe-common</artifactId>
            <version>${hframe.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.hongframework</groupId>
            <artifactId>hframe-beans</artifactId>
            <version>${hframe.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.hongframework</groupId>
            <artifactId>hframe-webcore</artifactId>
            <version>${hframe.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
            <!--<exclusions>-->
                <!--<exclusion>-->
                    <!--<groupId>org.eclipse.jetty.orbit</groupId>-->
                    <!--<artifactId>javax.servlet</artifactId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
        </dependency>
        <dependency>
            <groupId>com.github.hongframework</groupId>
            <artifactId>hframe-workflow</artifactId>
            <version>${hframe.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.hongframework</groupId>
            <artifactId>hframe-webgenerator</artifactId>
            <version>${hframe.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/log4j2.xml</exclude>
                        <exclude>**/logback.xml</exclude>
                        <exclude>**/jetty.xml</exclude>
                        <exclude>**/mybatis.xml</exclude>
                        <exclude>**/transactions.xml</exclude>
                        <exclude>**/hframe.properties</exclude>
                        <exclude>**/spring/</exclude>
                        <exclude>**/properties/</exclude>
                        <exclude>**/webapp/</exclude>
                        <exclude>**/hbase-site.xml</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.github.hongframework</groupId>
                                    <artifactId>hframe-deployer</artifactId>
                                    <version>${hframe.version}</version>
                                    <!--<type>jar</type>-->
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.basedir}/target</outputDirectory>
                                    <includes>
                                        **/assembly/**,**/bin/**
                                    </includes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.github.hongframework</groupId>
                                    <artifactId>hframe-webcore</artifactId>
                                    <version>${hframe.version}</version>
                                    <!--<type>jar</type>-->
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.basedir}/target</outputDirectory>
                                    <includes>webapp/**</includes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>compile_copy</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.github.hongframework</groupId>
                                    <artifactId>hframe-webcore</artifactId>
                                    <version>${hframe.version}</version>
                                    <!--<type>jar</type>-->
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.basedir}/target/classes</outputDirectory>
                                    <includes>webapp/**, hframework/**, properties/**, jetty.xml, mybatis.xml, transactions.xml</includes>>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <!-- 这是最新版本，推荐使用这个版本 -->
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>assemble</id>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <attach>false</attach>
                </configuration>
            </plugin>
        </plugins>
        <filters>
            <filter>${project.basedir}/src/main/filters/${env}.properties</filter>
        </filters>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering><!-- 临时改为false cause by : OTS parsing error: incorrect file size in WOFF header-->
            </resource>
        </resources>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>env</name>
                    <value>dev</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <!-- maven assembly插件需要一个描述文件 来告诉插件包的结构以及打包所需的文件来自哪里 -->
                            <descriptors>
                                <descriptor>${basedir}/target/assembly/dev.xml</descriptor>
                            </descriptors>
                            <finalName>${project.parent.artifactId}</finalName>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

        </profile>

        <profile>
            <id>debug</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>debug</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <!-- 发布模式使用的maven assembly插件描述文件 -->
                            <descriptors>
                                <descriptor>${basedir}/target/assembly/debug.xml</descriptor>
                            </descriptors>
                            <!-- 如果一个应用的包含多个deploy模块，如果使用同样的包名， 如果把它们复制的一个目录中可能会失败，所以包名加了 artifactId以示区分 -->
                            <finalName>${project.parent.artifactId}-manager</finalName>
                            <!-- scm 要求 release 模式打出的包放到顶级目录下的target子目录中 -->
                            <outputDirectory>${project.parent.build.directory}</outputDirectory>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>beta</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>beta</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <!-- 发布模式使用的maven assembly插件描述文件 -->
                            <descriptors>
                                <descriptor>${basedir}/target/assembly/beta.xml</descriptor>
                            </descriptors>
                            <!-- 如果一个应用的包含多个deploy模块，如果使用同样的包名， 如果把它们复制的一个目录中可能会失败，所以包名加了 artifactId以示区分 -->
                            <finalName>${project.parent.artifactId}-manager-${project.version}</finalName>
                            <!-- scm 要求 release 模式打出的包放到顶级目录下的target子目录中 -->
                            <outputDirectory>${project.parent.build.directory}</outputDirectory>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>release</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <!-- 发布模式使用的maven assembly插件描述文件 -->
                            <descriptors>
                                <descriptor>${basedir}/target/assembly/release.xml</descriptor>
                            </descriptors>
                            <!-- 如果一个应用的包含多个deploy模块，如果使用同样的包名， 如果把它们复制的一个目录中可能会失败，所以包名加了 artifactId以示区分 -->
                            <finalName>${project.parent.artifactId}-manager-${project.version}</finalName>
                            <!-- scm 要求 release 模式打出的包放到顶级目录下的target子目录中 -->
                            <outputDirectory>${project.parent.build.directory}</outputDirectory>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>deamon</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.1.1</version>
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <mainClass>com.hframework.deployer.webcontaner.HFrameworkBootstrap</mainClass>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
